lang_code: "中文（简体）"
app_ttl: "DiffTrainer"
tab_ttl_1: "关于"
tab_ttl_2: "数据准备"
tab_ttl_3: "配置"
tab_ttl_4: "预处理&训练"
tab_ttl_5: "导出歌手(基础)"
tab_ttl_6: "导出歌手(高级)"

# About tab
vers: "版本"
install: "完整安装"
install2: "安装 DiffSinger、Uta 的转换器、SOME 和所有必要 Python 组件 \n 第二次运行将删除并替换所有档案"
update: "更新工具"
update2: "安装 DiffSinger、Uta 的转换器、SOME,但不安装必要 Python 组件 \n 第二次运行将删除并替换所有档案"
cred_front: "前端:"
cred_back: "后端:"
restart: "(重启以应用)"
#note: string should not be longer than this or it will be cut off

#Data Prep tab
silperseg: "每段沉默的最大数量"
silperseg2: "单一网段中允许有多少个 AP/SP 实例 \n 下次沉默将开始新的片段"
length_sil: "最大沉默长度(秒)"
length_sil2: "每次沉默允许持续多久 \n 较长的沉默将会被分割 \n 这不是一个精确值,如果需要,可以更短或更长"
length_seg: "片段的最大长度(秒)"
length_seg2: "每个片段允许多长 较长的段落将被分割 \n 这不是一个精确值,如果需要,可以更短或更长 \n 建议值:至少5 个,但非常弱的GPU 可能只能处理2-4 个 1 不推荐"
estmidi: "估算 MIDI"
estmidi2: "计算每个音素的音高,训练音调模型的必须操作"
detbre: "侦测呼吸"
detbre2: "尝试分段解释呼吸声,结果不会一致"
rawdata: "选择原始资料文件夹"
rawdata2: "必须位于 raw_data 中 这应该是整个模型的一个文件夹, \n 每个说话人的子文件夹都应该包含 .wav 和 .lab 档案"
prepdata: "准备数据"
prepdata2: "运行该过程以准备 Diffsinger 格式的资料"

#Config tab
type: "类型:"
aco: "原声"
var: "方差"
adv: "高级: 自定义配置"
adv2: "解锁选项以单独选择参数 \n 仅推荐给有经验的使用者"
datafolder: "选择格式化的资料的文件夹"
datafolder2: "选择已在上一个选项卡上处理过的文件夹 \n 可以位于任何位置,但建议使用 /diffsinger/checkpoints 的子文件夹"
savefolder: "选择检查点储存文件夹"
savefolder2: "选择检查点的储存位置 必须是 /diffsinger/data 的子文件夹"
confsel: "选择配置:"
confsel2: "从此预设配置清单中进行选择 \n 所有选项都经过测试"
advconfig: "高级配置:"
advconfig2: "选择配置的各个选项 \n 非功能性组合是可能的"
saveint: "保存间隔:"
saveint2: "检查点将每 {saveint} 步保存一次"
maxbatch: "最大批量"
maxbatch2: "训练一次将处理多少个文件 \n 建议值因系统而异,但尝试从 9 开始（原声）和 24（方差） \n 无需重新处理二进位档案即可变更该值"
saveconf: "保存配置"

#Train tab
step1: "选择配置"
step1-2: "选择已为正确资料集设定的配置"
step2: "选择检查点资料夹"
step2-2: "选择将储存检查点的文件夹 \n 这应该与配置中的一致"
step3a: "预处理数据"
step3a2: "为训练过程准备二进位资料 \n 配置一次后运行一次"
step3b: "训练"
warning1: "该视窗在训练期间不会响应"
warning2: "若要停止训练,请在命令列视窗中按 Ctrl+C"
patchlabel: "可选补丁:"
patchbutton: "使用Tensor cores"
patchtip: "针对较新的 Nvidia GPU \n 如果您在训练开始时收到有关使用Tensor cores的讯息,则此补丁可能会稍微提高效能"

#Export tab
##strings 'aco', 'var', and 'step2' are reused
##字符串 'aco' 、 'var' 和 'step2' 被重复使用
acotip: "将原声检查点导出到 ONNX"
vartip: "将方差检查点导出到 ONNX"
step2-2alt: "选择储存检查点的文件夹 \n 将使用文件夹中最新的检查点"
onnx: "导出ONNX"
oupatch: "临时补丁按钮(安装/更新后运行一次)"
namebox: "输入歌手的名字,不要包含空格或特殊字元"
getaco: "选择原声检查点文件夹"
getaco2: "这应该与用于保存检查点的文件夹相同,而不是 onnx 文件夹"
getvar: "选择方差检查点文件夹"
ousave: "选择保存路径"
ousave2: "选择最终歌手文件夹的储存位置 \n 建议直接储存到 OpenUTAU/Singers 文件夹中"
vocoder: "可选: 自定义声码器"
vocoder2: "如果模型具有非预设声码器,请在此处选择 ONNX 档案"
ouexport: "为 OpenUtau 准备"

#Quick Inference
##strings 'getaco' and 'getvar' are reused
##字符串 'getaco' 和 'getvar' 被重复使用
getds: "选择 .ds 档"
varckpt: "方差 ckpt 文件夹"
acockpt: "原声 ckpt 文件夹"
spk: "请输入说话人的名字"
render: "渲染音频"
replay: "重播渲染的音频"

#test
testingline: "测试测试测试"

